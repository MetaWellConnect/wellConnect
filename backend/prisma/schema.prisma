// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  PROVIDER
}

model User {
  id            Int       @id @default(autoincrement())
  first_name    String
  last_name     String
  email         String    @unique
  password_hash String
  role          Role
  provider      Provider?
  patient       Patient?
}

model Patient {
  id           Int           @id
  user         User          @relation(fields: [id], references: [id])
  medications  Medication[]
  Appointments  Appointment[]
  provider     Provider?     @relation(fields: [provider_id], references: [id])
  provider_id  Int?
  treatment    Treatment?
  treatment_id Int?
}

model Provider {
  id                  Int                  @id
  user                User                 @relation(fields: [id], references: [id])
  appointments        Appointment[]
  patients            Patient[]
  treatments          Treatment[]
  providerPreferences ProviderPreferences?
}

model Medication {
  id                       Int       @id @default(autoincrement())
  name                     String
  strength                 String
  photo_url                String
  patient                  Patient   @relation(fields: [patient_id], references: [id])
  patient_id               Int
  treatment                Treatment @relation(fields: [treatment_id], references: [id])
  treatment_id             Int
  approved                 Boolean?
  time_of_last_dose        DateTime?
  time_of_next_dose        DateTime?
  number_of_required_doses Int?
  number_of_taken_doses    Int?
  frequency_in_hours       Int?
  dose                     String?
}

model Treatment {
  id          Int          @id @default(autoincrement())
  overview    String
  medications Medication[]
  patient     Patient      @relation(fields: [patient_id], references: [id])
  patient_id  Int          @unique
  provider    Provider     @relation(fields: [provider_id], references: [id])
  provider_id Int
}

model Appointment {
  id                  Int       @id @default(autoincrement())
  patient_id          Int
  provider_id         Int
  date                DateTime
  duration_in_minutes Int
  name                String
  provider            Provider? @relation(fields: [provider_id], references: [id])
  patient             Patient?  @relation(fields: [patient_id], references: [id])
}

model ProviderPreferences {
  id                        Int      @id @default(autoincrement())
  provider                  Provider @relation(fields: [provider_id], references: [id])
  provider_id               Int      @unique
  start_hour                Int   @default(9)
  end_hour                  Int   @default(17)
  available_days            String[] @default(["sun", "mon", "tue", "wed", "thu", "fri", "sat"])
  max_appointments_per_day  Int      @default(10)
  min_buffer_minutes        Int      @default(15)
  appointment_lead_time_min Int      @default(120)
  future_appointment_limit  Int      @default(30)
  timezone                  String   @default("America/Los_Angeles")
}
